#!/bin/bash

# <%= @provides %> - Startup script for mongod

# chkconfig: 35 85 15
# description: Mongo is a scalable, document-oriented database.
# processname: <%= @provides %>
# config: /etc/mongod.conf
# pidfile: <%= @pidfile %>

. /etc/rc.d/init.d/functions

SYSCONFIG="/etc/sysconfig/<%= @provides %>"
MONGO_USER=mongod

SUBSYS_LOCK_FILE=/var/lock/subsys/<%= @provides %>

. "$SYSCONFIG" || true

start()
{
  echo -n $"Starting <%= @provides %>: "
  daemon --user "$MONGO_USER" --pidfile <%= @pidfile %> $DAEMON $DAEMON_OPTS
  RETVAL=$?
  echo
  [ $RETVAL -eq 0 ] && touch $SUBSYS_LOCK_FILE
}

stop()
{
  echo -n $"Stopping <%= @provides %>: "
  killproc -p <%= @pidfile %> -d 300 $DAEMON
  RETVAL=$?
  echo
  [ $RETVAL -eq 0 ] && rm -f $SUBSYS_LOCK_FILE
}

restart () {
  stop
  start
}

<% if %w{ rhel }.include? node.platform_family -%>
ulimit -f <%= node.mongodb.ulimit.file_size %>
ulimit -t <%= node.mongodb.ulimit.cpu_time %>
ulimit -v <%= node.mongodb.ulimit.virtual_memory %>
ulimit -n <%= node.mongodb.ulimit.open_files %>
ulimit -m <%= node.mongodb.ulimit.memory_size %>
ulimit -u <%= node.mongodb.ulimit.processes %>
<% else -%>
ulimit -n 12000
<% end -%>

RETVAL=0

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart|reload|force-reload)
    restart
    ;;
  condrestart)
    [ -f $SUBSYS_LOCK_FILE ] && restart || :
    ;;
  status)
    status -p <%= @pidfile %> $DAEMON
    RETVAL=$?
    ;;
  *)
    echo "Usage: $0 {start|stop|status|restart|reload|force-reload|condrestart}"
    RETVAL=1
esac

exit $RETVAL
